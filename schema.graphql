# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type ActiveRequest {
  generalField: String!
  id: String!
  requester: User!
  txId: Transaction!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

interface Delegate {
  _delegator: User!
  _order: Order!
  _receiver: User!
  amount: Float!
  claimFailedReason: String
  delegateAmountInSun: Float
  delegateAt: Date
  delegateTxid: String
  deleteAt: Date
  durationSec: Int!
  failedReason: String
  isLock: Boolean!
  isManual: Boolean
  paidAmount: Float
  paidAt: Date
  paidError: String
  paidFee: Float
  paidTxid: String
  paymentAddress: String
  reclaimAt: Date
  reclaimTxid: String
  resourceType: ResourceType!
  status: DelegateStatus!
  unitPriceInSun: Float!
  willReclaimAt: Date
}

enum DelegateStatus {
  CLAIMED
  CLAIM_FAILED
  DELEGATED
  FAILED
  PENDING
}

enum FromSourceType {
  API
  BOT
  COMMAND
  FAST_CHARGE
  INTERNAL_API
  TELEGRAM
}

type InternalAccount {
  _user: User!
  balance: Float!
  createdAt: Date!
  internalAddress: String!
  totalDeposit: Float!
  totalWithdraw: Float!
  updatedAt: Date!
}

type Order {
  activeTo: Date
  allowPartialFull: Boolean!
  amount: Float!
  cancelAt: Date
  createdAt: Date!
  deleteAt: Date
  depositAmount: Float
  depositTxid: String
  durationSec: Float!
  errorScanTimes: Float
  fromSource: FromSourceType!
  id: String!
  isExtendRequest: Boolean
  isFullFilled: Boolean!
  isLock: Boolean!
  lastMatchedError: String
  matchedDelegates: [Delegate!]!
  maxUnitPrice: Float!
  receiver: User!
  refundError: String
  refundTxid: String
  remainAmount: Float!
  requester: User!
  resourceType: ResourceType!
  scanTimes: Float!
  type: OrderRequestType!
  unitPrice: Float!
  updatedAt: Date!
}

enum OrderRequestType {
  EXTEND
  EXTRA_BUY
  OVER_BUY
}

type PendingOrder {
  generalField: String!
  orderId: Order!
  requester: User!
  target: User!
}

type Permitting {
  address: String!
  availableBandwidth: Float!
  availableEnergy: Float!
  createdAt: Date!
  grantPermitAt: Date!
  lastPaymentAt: Date
  limitBandwidth: Float!
  limitEnergy: Float!
  limitRecoveryEnergy: Float!
  maintainUndelegateBandwidth: Float!
  maintainUndelegateEnergy: Float!
  maintainUnfreezeSun: Float!
  minBandwidthPrice: Float!
  minDelegateAmount: Float!
  minEnergyPrice: Float!
  paymentAddress: String!
  paymentFrequency: Float!
  permitOperations: [String!]!
  profitShare: Float!
  reclaimOnlyTronSave: Boolean!
  timeRecoverEnergyUsed: Int
  totalDelegateBandwidth: Float!
  totalDelegateEnergy: Float!
  totalDelegateTrx: Float!
  updatedAt: Date!
}

type Query {
  activeRequest(id: String!): ActiveRequest!
  activeRequests(limit: Int! = 10, offset: Int! = 0): [ActiveRequest!]!
  delegate(id: String!): Delegate!
  delegates(orderId: String!): [Delegate!]!
  order(id: String!): Order!
  orders(limit: Int! = 10, offset: Int! = 0): [Order!]!
  pendingOrder(id: String!): PendingOrder!
  pendingOrders(limit: Int! = 10, offset: Int! = 0): [PendingOrder!]!
  transaction(id: String!): Transaction!
  transactions(limit: Int! = 10, offset: Int! = 0): [Transaction!]!
  user(address: String!): User!
}

type Ref {
  _sponsor: User
  _user: User!
  createdAt: Date!
  paymentFrequencyInSec: Float!
  pendingRefCode: String
  remainRefBonus: Float!
  totalRefBonus: Float!
  updatedAt: Date!
  userRefCode: String
}

enum ResourceType {
  BANDWIDTH
  ENERGY
}

interface Transaction {
  _account: User!
  amount: Float!
  sourceType: TransactionSourceType!
  txid: String!
  type: TransactionType!
}

enum TransactionSourceType {
  EXTERNAL
  INTERNAL
}

enum TransactionType {
  OFFCHAIN
  ONCHAIN
}

type User {
  _internalAccount: InternalAccount
  _permitting: Permitting
  _ref: Ref!
  address: String!
  createdAt: Date!
  lastLogin: Date!
  totalDepositAmount: Float!
  totalFailTx: Float!
  totalSuccessTx: Float!
  totalWithdrawAmount: Float!
  updatedAt: Date!
}